name: Deploy to GitHub Pages  # 이름 설정
on:
  push:  # push 발생했을 때 실행
    branches: [main]  # main 브랜치로부터의 push

  workflow_dispatch:  # 수동실행할 수 있는 dispath 를 지정합니다

permissions:  # 필요한 권한 설정
  contents: read  # 읽기 권한
  pages: write  # GitHub Pages에 쓰기 권한을 부여합니다
  id-token: write  # ID 토큰에 대한 쓰기 권한을 부여합니다

concurrency:  # 동시 설정을 지정
  group: ${{ github.workflow }}-${{ github.ref }}  # 동일한 워크플로우와 브랜치에 대한 그룹을 지정
  cancel-in-progress: true  # 진행 중인 작업을 취소할 수 있도록 설정

jobs:  # job 설정

  build:  # 빌드 작업 정의
    runs-on: ubuntu-latest  # 실행 환경을 최신 버전의 우분투로 사용

    steps:  # 작업에 대한 단계 

      - name: Checkout repository  # 1. 단계의 이름을 checkout repository 로 설정
        uses: actions/checkout@v4  # GitHub 액션의 체크아웃 액션 사용

      - name: Set up Node  # 2. 단계의 이름을 Set up Node로 설정
        uses: actions/setup-node@v4  # Node.js 환경을 설정하기 위해 GitHub의 setup-node 액션을 사용합니다
        with:
          node-version: 20.x  # 버전을 20.x버전으로 사용
          cache: 'npm'  # npm 를 cache 합니다

      - name: Setup Pages  # 3. 단계의 이름을 Setup Pages 로 설정
        uses: actions/configure-pages@v4  # GitHub Pages를 설정하기 위해 GitHub의 configure-pages 액션을 사용합니다

      - name: Restore cache  # 4. 단계의 이름을 Restore cache로 설정
        uses: actions/cache@v4  # 캐시를 복원을 위해 GitHub의 캐시를 사용
        with:
          path: |
            **/node_modules  # 캐시를 복원할 경로를 지정
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}  # 캐시 키를 설정합니다 운영 체제와 package-lock.json 파일의 해시를 이용하여 키를 생성

      - name: Install dependencies  # 5. 단계의 이름을 Install dependencies로 설정
        run: npm ci  # npm ci 를 실행합니다

      - name: Build with vite  # 6. 단계의 이름을 Build with vite로 설정
        run: npm run build  # npm run build 를 실행합니다

      - name: Upload artifact  # 7. 단계의 이름을 Upload artifact로 설정
        uses: actions/upload-pages-artifact@v3  # GitHub의 upload-pages-artifact 액션을 사용
        with:
          path: ./dist  #파일 또는 디렉터리의 경로를 지정

  deploy:  # 배포 
    environment:  # 환경의 설정
      name: github-pages  # 환경의 이름을 github-pages로 설정
      url: ${{ steps.deployment.outputs.page_url }}  # 배포 페이지의 URL을 설정

    runs-on: ubuntu-latest  # 실행 환경을 최신 버전의 우분투로 사용
    needs: build  # build 작업이 성공적으로 완료되오야 실행됩니다

    steps:  # 배포작업의 단계

      - name: Deploy to GitHub Pages  # 단계의 이름을 Deploy to GitHub Pages로 설정
        id: deployment  # 단계의 ID를 설정
        uses: actions/deploy-pages@v4  #GitHub의 deploy-pages 액션을 사용

name: Deploy to GitHub Pages  # 이름 설정: 이 워크플로우의 이름을 "Deploy to GitHub Pages"로 설정합니다.

on:
  push:  # 워크플로우를 실행할 이벤트를 지정합니다. 이 경우, push 이벤트가 발생했을 때 실행됩니다.
    branches: [main]  # main 브랜치로부터의 push 이벤트에 대해 실행됩니다.

  workflow_dispatch:  # 수동으로 워크플로우를 실행할 수 있는 디스패치(dispatch) 이벤트를 지정합니다.

permissions:  # 워크플로우가 실행될 때 필요한 권한을 설정합니다.
  contents: read  # 리포지토리의 내용을 읽기 위한 권한을 부여합니다.
  pages: write  # GitHub Pages에 쓰기 권한을 부여합니다.
  id-token: write  # ID 토큰에 대한 쓰기 권한을 부여합니다.

concurrency:  # 동시성(Concurrency) 설정을 지정합니다.
  group: ${{ github.workflow }}-${{ github.ref }}  # 동일한 워크플로우와 브랜치에 대한 그룹을 지정합니다.
  cancel-in-progress: true  # 진행 중인 작업을 취소할 수 있도록 설정합니다.

jobs:  # 작업(Job)을 정의합니다.

  build:  # 빌드 작업을 정의합니다.
    runs-on: ubuntu-latest  # 실행 환경을 지정합니다. 여기서는 최신 버전의 우분투(Ubuntu)를 사용합니다.

    steps:  # 작업에 대한 단계(Steps)를 정의합니다.

      - name: Checkout repository  # 단계의 이름을 "Checkout repository"로 설정합니다.
        uses: actions/checkout@v4  # GitHub 액션의 체크아웃 액션을 사용하여 리포지토리를 체크아웃합니다.

      - name: Set up Node  # 단계의 이름을 "Set up Node"로 설정합니다.
        uses: actions/setup-node@v4  # Node.js 환경을 설정하기 위해 GitHub 액션의 setup-node 액션을 사용합니다.
        with:
          node-version: 20.x  # Node.js 버전을 20.x로 설정합니다.
          cache: 'npm'  # npm 패키지를 캐싱합니다.

      - name: Setup Pages  # 단계의 이름을 "Setup Pages"로 설정합니다.
        uses: actions/configure-pages@v4  # GitHub Pages를 설정하기 위해 GitHub 액션의 configure-pages 액션을 사용합니다.

      - name: Restore cache  # 단계의 이름을 "Restore cache"로 설정합니다.
        uses: actions/cache@v4  # 캐시를 복원하기 위해 GitHub 액션의 캐시 액션을 사용합니다.
        with:
          path: |
            **/node_modules  # 캐시를 복원할 경로를 지정합니다. 여기서는 모든 node_modules 디렉터리를 포함합니다.
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}  # 캐시 키를 설정합니다. 운영 체제와 package-lock.json 파일의 해시를 이용하여 유니크한 키를 생성합니다.

      - name: Install dependencies  # 단계의 이름을 "Install dependencies"로 설정합니다.
        run: npm ci  # npm을 사용하여 종속성(dependencies)을 설치합니다. "ci" 명령은 package-lock.json 파일을 사용하여 정확한 종속성을 설치합니다.

      - name: Build with vite  # 단계의 이름을 "Build with vite"로 설정합니다.
        run: npm run build  # Vite를 사용하여 프로젝트를 빌드합니다.

      - name: Upload artifact  # 단계의 이름을 "Upload artifact"로 설정합니다.
        uses: actions/upload-pages-artifact@v3  # GitHub Pages에 빌드된 결과를 업로드하기 위해 GitHub 액션의 upload-pages-artifact 액션을 사용합니다.
        with:
          path: ./dist  # 업로드할 파일 또는 디렉터리의 경로를 지정합니다.

  deploy:  # 배포 작업을 정의합니다.
    environment:  # 환경(Environment) 설정을 지정합니다.
      name: github-pages  # 환경의 이름을 "github-pages"로 설정합니다.
      url: ${{ steps.deployment.outputs.page_url }}  # 배포된 페이지의 URL을 설정합니다.

    runs-on: ubuntu-latest  # 실행 환경을 지정합니다. 여기서는 최신 버전의 우분투(Ubuntu)를 사용합니다.
    needs: build  # build 작업이 성공적으로 완료되어야 합니다.

    steps:  # 작업에 대한 단계(Steps)를 정의합니다.

      - name: Deploy to GitHub Pages  # 단계의 이름을 "Deploy to GitHub Pages"로 설정합니다.
        id: deployment  # 단계의 ID를 설정합니다.
        uses: actions/deploy-pages@v4  # GitHub Pages로 배포하기 위해 GitHub 액션의 deploy-pages 액션을 사용합니다.
